{"version":3,"sources":["components/NewExpense/ExpenseForm.module.css","components/Balance/BalanceBar.module.css","components/UI/ErrorModal.module.css","components/Balance/Balance.module.css","components/UI/Button.module.css","components/Expenses/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Balance/BalanceBar.js","components/Balance/Balance.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Button.js","components/UI/ErrorModal.js","App.js","index.js"],"names":["module","exports","ExpensesFilter","props","className","value","selectedYear","onChange","event","onChangeFilter","target","Card","classes","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","console","log","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","BalanceBar","styles","colorForVar","half","full","balance","Balance","expenses","maxBalance","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expenses","useState","filteredYear","setFilterYear","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","invalidTitle","setInvalidTitle","invalidAmount","setInvalidAmount","invalidDate","setInvalidDate","onSubmit","preventDefault","trim","currDate","Date","isNaN","getTime","expenseData","onSaveExpenseData","invalid","type","min","step","onClick","onCancel","NewExpense","isEditing","setEditing","startEditingHandler","prevState","enteredExpenseData","random","onAddExpense","Button","button","Backdrop","backdrop","onConfirm","ModalOverlay","modal","header","content","message","actions","ErrorModal","Fragment","ReactDOM","createPortal","document","getElementById","DUMMY_EXPENSES","CURRENT_EXPENSES","forEach","arrayItem","App","updateBalance","setExpenses","error","setError","prevBalance","prevExpenses","render"],"mappings":"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","file":"static/js/main.cef6102f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-expense__controls\":\"ExpenseForm_new-expense__controls__1XMRg\",\"new-expense__control\":\"ExpenseForm_new-expense__control__23xqY\",\"invalid\":\"ExpenseForm_invalid__FbQI9\",\"new-expense__actions\":\"ExpenseForm_new-expense__actions__3IXew\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance-bar\":\"BalanceBar_balance-bar__1mpOH\",\"balance-bar__inner\":\"BalanceBar_balance-bar__inner__22cej\",\"half\":\"BalanceBar_half__3hCm4\",\"full\":\"BalanceBar_full__3SHLm\",\"balance-bar__fill\":\"BalanceBar_balance-bar__fill__-kg4i\",\"chart-bar__label\":\"BalanceBar_chart-bar__label__RbAPq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"ErrorModal_backdrop__3SZ6y\",\"modal\":\"ErrorModal_modal__3ZW04\",\"header\":\"ErrorModal_header__2rKIm\",\"content\":\"ErrorModal_content__zye2B\",\"actions\":\"ErrorModal_actions__1yaPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__30Dlf\",\"half\":\"Balance_half__1ta-8\",\"full\":\"Balance_full__2PjF9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__6-R6B\"};","import React from 'react';\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n    const dropdownChangeHandler = (event) => {\n        props.onChangeFilter(event.target.value);\n    }\n    return (\n        <div className=\"expenses-filter\">\n            <div className=\"expenses-filter__control\">\n                <label>Filter by year</label>\n                <select value={props.selectedYear} onChange={dropdownChangeHandler}>\n                    <option value=\"2022\">2022</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default ExpensesFilter;\n","import \"./Card.css\";\n\nfunction Card(props) {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expensee-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\nexport default ExpenseDate;\n","import \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nfunction ExpenseItem(props) {\n  console.log(\"ExpenseItem evaluated by React\");\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\"> Found no expenses.</h2>;\n  }\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from 'react';\nimport \"./ChartBar.css\";\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import styles from \"./BalanceBar.module.css\";\n\nconst BalanceBar = (props) => {\n  return (\n    <div className={styles[\"balance-bar\"]}>\n      <div className={`${styles[\"balance-bar__inner\"]}\n                        ${props.colorForVar === \"yellow\" && styles.half}\n                        ${props.colorForVar === \"red\" && styles.full}`}>\n        <div\n          className={`${styles[\"balance-bar__fill\"]} \n                      ${props.colorForVar === \"yellow\" && styles.half} \n                      ${props.colorForVar === \"red\" && styles.full}`}\n          style={{ height: props.barFillHeight }}\n        ></div>\n      </div>\n      <div>$:{Math.round(props.balance)}</div>\n    </div>\n  );\n};\n\nexport default BalanceBar;\n","import BalanceBar from \"./BalanceBar\";\nimport styles from \"./Balance.module.css\";\nconst Balance = (props) => {\n  let barFillHeight = \"100%\";\n  let colorForVar = \"green\";\n  if (props.balance > 0) {\n    let expenses = 100 - Math.round((props.balance / props.maxBalance) * 100);\n    if (expenses > 50 && expenses <= 80) {\n      colorForVar = \"yellow\";\n    } else if (expenses > 80 && expenses <= 100) {\n      colorForVar = \"red\";\n    }\n    barFillHeight = expenses + \"%\";\n  }\n  return (\n    <div className={`${styles.balance} \n                     ${colorForVar === \"yellow\" && styles.half} \n                     ${colorForVar === \"red\" && styles.full}`}>\n      <BalanceBar\n        barFillHeight={barFillHeight}\n        balance={props.balance}\n        colorForVar={colorForVar}\n      />\n    </div>\n  );\n};\n\nexport default Balance;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport Balance from \"../Balance/Balance\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  return (\n    <div className=\"flexbox-container\">\n      <div className=\"chart\">\n        {props.dataPoints.map((dataPoint) => (\n          <ChartBar\n            key={dataPoint.label}\n            value={dataPoint.value}\n            maxValue={totalMaximum}\n            label={dataPoint.label}\n          />\n        ))}\n      </div>\n      <Balance\n        balance={props.balance}\n        maxBalance={props.maxBalance}\n      />\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return (\n    <Chart\n      dataPoints={chartDataPoints}\n      balance={props.balance}\n      maxBalance={props.maxBalance}\n    />\n  );\n};\n\nexport default ExpensesChart;\n","import ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilterYear] = useState(\"2021\");\n  const filterChangeHandler = (selectedYear) => {\n    setFilterYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <li>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selectedYear={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart\n          expenses={filteredExpenses}\n          balance={props.balance}\n          maxBalance={props.maxBalance}\n        />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </li>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport styles from \"./ExpenseForm.module.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const titleChangedHandler = (event) => {\n    setInvalidTitle(false);\n    setEnteredTitle(event.target.value);\n  };\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const amountChangedHandler = (event) => {\n    setInvalidAmount(false);\n    setEnteredAmount(event.target.value);\n  };\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const dateChangedHandler = (event) => {\n    setInvalidDate(false);\n    setEnteredDate(event.target.value);\n  };\n  const [invalidTitle, setInvalidTitle] = useState(false);\n  const [invalidAmount, setInvalidAmount] = useState(false);\n  const [invalidDate, setInvalidDate] = useState(false);\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (enteredTitle.trim().length === 0) {\n      setInvalidTitle(true);\n      return;\n    }\n    console.log(enteredAmount);\n    if (enteredAmount === \"\" || enteredAmount < 0) {\n      setInvalidAmount(true);\n      return;\n    }\n    const currDate = new Date(enteredDate);\n    if (isNaN(currDate.getTime())) {\n      setInvalidDate(true);\n      return;\n    }\n    if (!invalidTitle && !invalidAmount && !invalidDate) {\n      const expenseData = {\n        title: enteredTitle,\n        amount: +enteredAmount,\n        date: new Date(enteredDate),\n      };\n      props.onSaveExpenseData(expenseData);\n      setEnteredTitle(\"\");\n      setEnteredAmount(\"\");\n      setEnteredDate(\"\");\n    }\n  };\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={`${styles[\"new-expense__control\"]}`}>\n        <div\n          className={`${styles[\"new-expense__control\"]} ${\n            invalidTitle && styles.invalid\n          }`}\n        >\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangedHandler}\n          />\n        </div>\n      </div>\n      <div className={`${styles[\"new-expense__control\"]}`}>\n        <div className={`${styles[\"new-expense__control\"]} ${invalidAmount && styles.invalid}`}>\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangedHandler}\n          />\n        </div>\n      </div>\n      <div className={`${styles[\"new-expense__control\"]}`}>\n        <div className={`${styles[\"new-expense__control\"]} ${invalidDate && styles.invalid}`}>\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangedHandler}\n          />\n        </div>\n      </div>\n      <div className={`${styles[\"new-expense__actions\"]}`}>\n        <button type=\"submit\">Add Expense</button>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n  };\n  const [isEditing, setEditing] = useState(false);\n  const startEditingHandler = () => {\n    setEditing((prevState) => {\n      return !prevState;\n    });\n  };\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={startEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from \"react\";\nimport styles from \"./Button.module.css\";\n\nconst Button = (props) => {\n  return (\n    <button\n      className={styles.button}\n      type={props.type || \"button\"}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Card from \"./Card\";\nimport Button from \"./Button\";\nimport styles from \"./ErrorModal.module.css\";\nconst Backdrop = (props) => {\n  return <div className={styles.backdrop} onClick={props.onConfirm}></div>;\n};\nconst ModalOverlay = (props) => {\n  return (\n    <Card className={styles.modal}>\n      <header className={styles.header}>\n        <h2>{props.title}</h2>\n      </header>\n      <div className={styles.content}>\n        <p>{props.message}</p>\n      </div>\n      <footer className={styles.actions}>\n        <Button onClick={props.onConfirm}>Okay</Button>\n      </footer>\n    </Card>\n  );\n};\nconst ErrorModal = (props) => {\n  return (\n    <React.Fragment>\n      {ReactDOM.createPortal(\n        <Backdrop onConfirm={props.onConfirm} />,\n        document.getElementById(\"backdrop-root\")\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay title={props.title} onConfirm={props.onConfirm}message={props.message} />,\n        document.getElementById(\"overlay-root\")\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ErrorModal;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport ErrorModal from \"./components/UI/ErrorModal\";\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 95.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nlet CURRENT_EXPENSES = 0;\nDUMMY_EXPENSES.forEach((arrayItem) => {\n  CURRENT_EXPENSES += arrayItem.amount;\n});\n\nconst STARTING_BALANCE = 4000;\nconst App = () => {\n  const [balance, updateBalance] = useState(\n    STARTING_BALANCE - CURRENT_EXPENSES\n  );\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const [error, setError] = useState(\"\");\n  const addExpenseHandler = (expense) => {\n    if (balance - expense.amount < 0) {\n      setError({\n        title: \"Insufficient Funds.\",\n        message: \"Please enter a valid expense or remove another one.\",\n      });\n    } else {\n      updateBalance((prevBalance) => {\n        return prevBalance - expense.amount;\n      });\n      setExpenses((prevExpenses) => {\n        return [expense, ...prevExpenses];\n      });\n      console.log(expenses);\n    }\n  };\n\n  const closeErrorHandler = () => {\n    setError(\"\");\n  };\n  return (\n    <React.Fragment>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses\n        items={expenses}\n        balance={balance}\n        maxBalance={STARTING_BALANCE}\n      />\n      {error && (\n        <ErrorModal\n          onConfirm={closeErrorHandler}\n          title={error.title}\n          message={error.message}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}